{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\undre\\\\OneDrive\\\\Desktop\\\\EYGDS\\\\frontend\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { FaHeart, FaRegHeart, FaPlus, FaTrash, FaEdit } from \"react-icons/fa\";\n// import \"../pages/style/Home.css\";\n\n// const Home = () => {\n//   const [recipes, setRecipes] = useState([]);\n//   const [search, setSearch] = useState(\"\");\n//   const [savedRecipes, setSavedRecipes] = useState([]);\n//   const [showForm, setShowForm] = useState(false);\n//   const [editRecipeId, setEditRecipeId] = useState(null);\n//   const [newRecipe, setNewRecipe] = useState({\n//     name: \"\",\n//     ingredients: \"\",\n//     method: \"\",\n//     image: null,\n//   });\n\n//   // Fetch Recipes from Backend\n//   useEffect(() => {\n//     fetch(\"http://localhost:3001/api/recipes\") // ✅ Correct\n\n//       .then((res) => res.json())\n//       .then((data) => setRecipes(data))\n//       .catch((error) => console.error(\"Error fetching recipes:\", error));\n\n//     // Load saved recipes from localStorage\n//     const storedRecipes = JSON.parse(localStorage.getItem(\"savedRecipes\")) || [];\n//     setSavedRecipes(storedRecipes);\n//   }, []);\n\n//   // Handle Image Upload\n//   const handleImageUpload = (e) => {\n//     setNewRecipe((prev) => ({ ...prev, image: e.target.files[0] }));\n//   };\n\n//   // Save or Update Recipe\n//   const handleSaveRecipe = async () => {\n//     if (!newRecipe.name || !newRecipe.ingredients || !newRecipe.method || !newRecipe.image) {\n//       alert(\"Please fill out all fields and upload an image before saving!\");\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"name\", newRecipe.name);\n//     formData.append(\"ingredients\", JSON.stringify(newRecipe.ingredients.split(\",\"))); // ✅ Correct\n\n//     formData.append(\"method\", newRecipe.method);\n//     formData.append(\"image\", newRecipe.image);\n\n//     try {\n//       let response;\n//       if (editRecipeId) {\n//         // UPDATE Recipe (PUT request)\n//         response = await fetch(`http://localhost:3001/api/recipes/${editRecipeId}`, {\n//           method: \"PUT\",\n//           body: formData,\n//         });\n//       } else {\n//         // CREATE Recipe (POST request)\n//         response = await fetch(\"http://localhost:3001/api/recipes\", {\n//           method: \"POST\",\n//           body: formData,\n//         });\n//       }\n\n//       if (!response.ok) throw new Error(\"Failed to save recipe\");\n\n//       const data = await response.json();\n\n//       if (editRecipeId) {\n//         setRecipes(recipes.map((r) => (r._id === editRecipeId ? data : r))); // Update state\n//       } else {\n//         setRecipes([...recipes, data]); // Add new recipe to state\n//       }\n\n//       setShowForm(false);\n//       setEditRecipeId(null);\n//       setNewRecipe({ name: \"\", ingredients: \"\", method: \"\", image: null });\n\n//     } catch (error) {\n//       console.error(\"Error saving recipe:\", error);\n//     }\n//   };\n\n//   // Delete Recipe & Remove from Saved\n//   const handleDeleteRecipe = async (id) => {\n//     if (!window.confirm(\"Are you sure you want to delete this recipe?\")) return;\n\n//     try {\n//       await fetch(`http://localhost:3001/api/recipes/${id}`, { method: \"DELETE\" });\n\n//       setRecipes((prevRecipes) => prevRecipes.filter((recipe) => recipe._id !== id));\n\n//       // Remove from savedRecipes as well\n//       const updatedSavedRecipes = savedRecipes.filter((recipeId) => recipeId !== id);\n//       setSavedRecipes(updatedSavedRecipes);\n//       localStorage.setItem(\"savedRecipes\", JSON.stringify(updatedSavedRecipes));\n\n//     } catch (error) {\n//       console.error(\"Error deleting recipe:\", error);\n//     }\n//   };\n\n//   // Edit Recipe (Pre-fill form)\n//   const handleEditRecipe = (recipe) => {\n//     setEditRecipeId(recipe._id);\n//     setNewRecipe({\n//       name: recipe.name,\n//       ingredients: recipe.ingredients.join(\", \"),\n//       method: recipe.method,\n//       image: recipe.image || null, // ✅ Keep existing image\n//     });\n\n//     setShowForm(true);\n//   };\n\n//   // Toggle Save Recipe (Favoriting)\n//   const toggleSaveRecipe = (id) => {\n//     let updatedSavedRecipes;\n//     if (savedRecipes.includes(id)) {\n//       updatedSavedRecipes = savedRecipes.filter((recipeId) => recipeId !== id);\n//     } else {\n//       updatedSavedRecipes = [...savedRecipes, id];\n//     }\n//     setSavedRecipes(updatedSavedRecipes);\n//     localStorage.setItem(\"savedRecipes\", JSON.stringify(updatedSavedRecipes)); // Update localStorage\n//   };\n\n//   // Filter Recipes\n//   const filteredRecipes = recipes.filter(\n//     (recipe) =>\n//       recipe.name.toLowerCase().includes(search.toLowerCase()) ||\n//       recipe.ingredients.some((ingredient) =>\n//         ingredient.toLowerCase().includes(search.toLowerCase())\n//       )\n//   );\n\n//   return (\n//     <div className=\"container\">\n//       <button className=\"add-recipe-btn\" onClick={() => setShowForm(!showForm)}>\n//         <FaPlus /> {showForm ? \"Close\" : \"Add Recipe\"}\n//       </button>\n\n//       <input\n//         type=\"text\"\n//         className=\"form-control my-3\"\n//         placeholder=\"Search recipes by name or ingredient...\"\n//         value={search}\n//         onChange={(e) => setSearch(e.target.value)}\n//       />\n\n//       {showForm && (\n//         <div className=\"card p-3 mb-4\">\n//           <h4>{editRecipeId ? \"Edit Recipe\" : \"Add a New Recipe\"}</h4>\n//           <input\n//             type=\"text\"\n//             className=\"form-control mb-2\"\n//             placeholder=\"Dish Name\"\n//             value={newRecipe.name}\n//             onChange={(e) => setNewRecipe({ ...newRecipe, name: e.target.value })}\n//           />\n//           <input\n//             type=\"text\"\n//             className=\"form-control mb-2\"\n//             placeholder=\"Ingredients (comma separated)\"\n//             value={newRecipe.ingredients}\n//             onChange={(e) => setNewRecipe({ ...newRecipe, ingredients: e.target.value })}\n//           />\n//           <textarea\n//             className=\"form-control mb-2\"\n//             placeholder=\"Method\"\n//             value={newRecipe.method}\n//             onChange={(e) => setNewRecipe({ ...newRecipe, method: e.target.value })}\n//           />\n//           <input type=\"file\" className=\"form-control mb-2\" onChange={handleImageUpload} accept=\"image/*\" />\n//           <button className=\"btn btn-success\" onClick={handleSaveRecipe}>\n//             {editRecipeId ? \"Update\" : \"Add\"} Recipe\n//           </button>\n//         </div>\n//       )}\n\n//       <div className=\"row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\">\n//         {filteredRecipes.length > 0 ? (\n//           filteredRecipes.map((recipe) => (\n//             <div className=\"col\" key={recipe._id}>\n//               <div className=\"card h-100 shadow-sm\">\n//               <img src={`http://localhost:3001/api${recipe.image}`} className=\"card-img-top\" alt={recipe.name} />\n//                 <div className=\"card-body\">\n//                   <h5 className=\"card-title d-flex justify-content-between align-items-center\">\n//                     {recipe.name}\n//                     <span onClick={() => toggleSaveRecipe(recipe._id)} style={{ cursor: \"pointer\", color: \"red\", fontSize: \"1.5rem\" }}>\n//                       {savedRecipes.includes(recipe._id) ? <FaHeart /> : <FaRegHeart />}\n//                     </span>\n//                   </h5>\n//                   <p><strong>Ingredients:</strong> {recipe.ingredients.join(\", \")}</p>\n//                   <p><strong>Method:</strong> {recipe.method}</p>\n//                   <button className=\"btn btn-warning btn-sm me-2\" onClick={() => handleEditRecipe(recipe)}>\n//                     <FaEdit />\n//                   </button>\n//                   <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteRecipe(recipe._id)}>\n//                     <FaTrash />\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p className=\"text-center\">No matching recipes found.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Home;\n\nimport React, { useState, useEffect } from \"react\";\nimport { FaHeart, FaRegHeart, FaPlus, FaEdit, FaTrash } from \"react-icons/fa\";\nimport \"../pages/style/Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [savedRecipes, setSavedRecipes] = useState(JSON.parse(localStorage.getItem(\"savedRecipes\")) || []);\n  const [showForm, setShowForm] = useState(false);\n  const [editRecipeId, setEditRecipeId] = useState(null);\n  const [newRecipe, setNewRecipe] = useState({\n    name: \"\",\n    ingredients: \"\",\n    method: \"\",\n    image: null\n  });\n  useEffect(() => {\n    fetch(\"http://localhost:3001/api/recipes\").then(res => res.json()).then(data => setRecipes(data)).catch(error => console.error(\"Error fetching recipes:\", error));\n  }, []);\n  const handleImageUpload = e => {\n    setNewRecipe(prev => ({\n      ...prev,\n      image: e.target.files[0]\n    }));\n  };\n  const handleSaveRecipe = async () => {\n    if (!newRecipe.name || !newRecipe.ingredients || !newRecipe.method || !newRecipe.image) {\n      alert(\"Please fill out all fields!\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"name\", newRecipe.name);\n    formData.append(\"ingredients\", JSON.stringify(newRecipe.ingredients.split(\",\")));\n    formData.append(\"method\", newRecipe.method);\n    formData.append(\"image\", newRecipe.image);\n    try {\n      let response;\n      if (editRecipeId) {\n        response = await fetch(`http://localhost:3001/api/recipes/${editRecipeId}`, {\n          method: \"PUT\",\n          body: formData\n        });\n      } else {\n        response = await fetch(\"http://localhost:3001/api/recipes\", {\n          method: \"POST\",\n          body: formData\n        });\n      }\n      if (!response.ok) throw new Error(\"Failed to save recipe\");\n      const data = await response.json();\n      setRecipes(editRecipeId ? recipes.map(r => r._id === editRecipeId ? data : r) : [...recipes, data]);\n      setShowForm(false);\n      setEditRecipeId(null);\n      setNewRecipe({\n        name: \"\",\n        ingredients: \"\",\n        method: \"\",\n        image: null\n      });\n    } catch (error) {\n      console.error(\"Error saving recipe:\", error);\n    }\n  };\n  const handleDeleteRecipe = async id => {\n    if (!window.confirm(\"Are you sure you want to delete this recipe?\")) return;\n    try {\n      await fetch(`http://localhost:3001/api/recipes/${id}`, {\n        method: \"DELETE\"\n      });\n      setRecipes(prev => prev.filter(recipe => recipe._id !== id));\n    } catch (error) {\n      console.error(\"Error deleting recipe:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-recipe-btn\",\n      onClick: () => setShowForm(!showForm),\n      children: [/*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), \" \", showForm ? \"Close\" : \"Add Recipe\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"form-control my-3\",\n      placeholder: \"Search recipes by name or ingredient...\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card p-3 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: editRecipeId ? \"Edit Recipe\" : \"Add a New Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: \"Dish Name\",\n        value: newRecipe.name,\n        onChange: e => setNewRecipe({\n          ...newRecipe,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: \"Ingredients (comma separated)\",\n        value: newRecipe.ingredients,\n        onChange: e => setNewRecipe({\n          ...newRecipe,\n          ingredients: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control mb-2\",\n        placeholder: \"Method\",\n        value: newRecipe.method,\n        onChange: e => setNewRecipe({\n          ...newRecipe,\n          method: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control mb-2\",\n        onChange: handleImageUpload,\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: handleSaveRecipe,\n        children: [editRecipeId ? \"Update\" : \"Add\", \" Recipe\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row row-cols-1 row-cols-md-3 g-4\",\n      children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:3001${recipe.image}`,\n            alt: recipe.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: recipe.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteRecipe(recipe._id),\n            children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 70\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this)\n      }, recipe._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"I0UUWAVWUrrRYAqYtJnSVOxAK8A=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","FaHeart","FaRegHeart","FaPlus","FaEdit","FaTrash","jsxDEV","_jsxDEV","Home","_s","recipes","setRecipes","search","setSearch","savedRecipes","setSavedRecipes","JSON","parse","localStorage","getItem","showForm","setShowForm","editRecipeId","setEditRecipeId","newRecipe","setNewRecipe","name","ingredients","method","image","fetch","then","res","json","data","catch","error","console","handleImageUpload","e","prev","target","files","handleSaveRecipe","alert","formData","FormData","append","stringify","split","response","body","ok","Error","map","r","_id","handleDeleteRecipe","id","window","confirm","filter","recipe","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","accept","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/undre/OneDrive/Desktop/EYGDS/frontend/src/pages/Home.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { FaHeart, FaRegHeart, FaPlus, FaTrash, FaEdit } from \"react-icons/fa\";\r\n// import \"../pages/style/Home.css\";\r\n\r\n// const Home = () => {\r\n//   const [recipes, setRecipes] = useState([]);\r\n//   const [search, setSearch] = useState(\"\");\r\n//   const [savedRecipes, setSavedRecipes] = useState([]);\r\n//   const [showForm, setShowForm] = useState(false);\r\n//   const [editRecipeId, setEditRecipeId] = useState(null);\r\n//   const [newRecipe, setNewRecipe] = useState({\r\n//     name: \"\",\r\n//     ingredients: \"\",\r\n//     method: \"\",\r\n//     image: null,\r\n//   });\r\n\r\n//   // Fetch Recipes from Backend\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:3001/api/recipes\") // ✅ Correct\r\n\r\n//       .then((res) => res.json())\r\n//       .then((data) => setRecipes(data))\r\n//       .catch((error) => console.error(\"Error fetching recipes:\", error));\r\n\r\n//     // Load saved recipes from localStorage\r\n//     const storedRecipes = JSON.parse(localStorage.getItem(\"savedRecipes\")) || [];\r\n//     setSavedRecipes(storedRecipes);\r\n//   }, []);\r\n\r\n//   // Handle Image Upload\r\n//   const handleImageUpload = (e) => {\r\n//     setNewRecipe((prev) => ({ ...prev, image: e.target.files[0] }));\r\n//   };\r\n\r\n//   // Save or Update Recipe\r\n//   const handleSaveRecipe = async () => {\r\n//     if (!newRecipe.name || !newRecipe.ingredients || !newRecipe.method || !newRecipe.image) {\r\n//       alert(\"Please fill out all fields and upload an image before saving!\");\r\n//       return;\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"name\", newRecipe.name);\r\n//     formData.append(\"ingredients\", JSON.stringify(newRecipe.ingredients.split(\",\"))); // ✅ Correct\r\n\r\n//     formData.append(\"method\", newRecipe.method);\r\n//     formData.append(\"image\", newRecipe.image);\r\n\r\n//     try {\r\n//       let response;\r\n//       if (editRecipeId) {\r\n//         // UPDATE Recipe (PUT request)\r\n//         response = await fetch(`http://localhost:3001/api/recipes/${editRecipeId}`, {\r\n//           method: \"PUT\",\r\n//           body: formData,\r\n//         });\r\n//       } else {\r\n//         // CREATE Recipe (POST request)\r\n//         response = await fetch(\"http://localhost:3001/api/recipes\", {\r\n//           method: \"POST\",\r\n//           body: formData,\r\n//         });\r\n//       }\r\n\r\n//       if (!response.ok) throw new Error(\"Failed to save recipe\");\r\n\r\n//       const data = await response.json();\r\n\r\n//       if (editRecipeId) {\r\n//         setRecipes(recipes.map((r) => (r._id === editRecipeId ? data : r))); // Update state\r\n//       } else {\r\n//         setRecipes([...recipes, data]); // Add new recipe to state\r\n//       }\r\n\r\n//       setShowForm(false);\r\n//       setEditRecipeId(null);\r\n//       setNewRecipe({ name: \"\", ingredients: \"\", method: \"\", image: null });\r\n\r\n//     } catch (error) {\r\n//       console.error(\"Error saving recipe:\", error);\r\n//     }\r\n//   };\r\n\r\n//   // Delete Recipe & Remove from Saved\r\n//   const handleDeleteRecipe = async (id) => {\r\n//     if (!window.confirm(\"Are you sure you want to delete this recipe?\")) return;\r\n\r\n//     try {\r\n//       await fetch(`http://localhost:3001/api/recipes/${id}`, { method: \"DELETE\" });\r\n\r\n//       setRecipes((prevRecipes) => prevRecipes.filter((recipe) => recipe._id !== id));\r\n\r\n//       // Remove from savedRecipes as well\r\n//       const updatedSavedRecipes = savedRecipes.filter((recipeId) => recipeId !== id);\r\n//       setSavedRecipes(updatedSavedRecipes);\r\n//       localStorage.setItem(\"savedRecipes\", JSON.stringify(updatedSavedRecipes));\r\n\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting recipe:\", error);\r\n//     }\r\n//   };\r\n\r\n//   // Edit Recipe (Pre-fill form)\r\n//   const handleEditRecipe = (recipe) => {\r\n//     setEditRecipeId(recipe._id);\r\n//     setNewRecipe({\r\n//       name: recipe.name,\r\n//       ingredients: recipe.ingredients.join(\", \"),\r\n//       method: recipe.method,\r\n//       image: recipe.image || null, // ✅ Keep existing image\r\n//     });\r\n    \r\n//     setShowForm(true);\r\n//   };\r\n  \r\n\r\n//   // Toggle Save Recipe (Favoriting)\r\n//   const toggleSaveRecipe = (id) => {\r\n//     let updatedSavedRecipes;\r\n//     if (savedRecipes.includes(id)) {\r\n//       updatedSavedRecipes = savedRecipes.filter((recipeId) => recipeId !== id);\r\n//     } else {\r\n//       updatedSavedRecipes = [...savedRecipes, id];\r\n//     }\r\n//     setSavedRecipes(updatedSavedRecipes);\r\n//     localStorage.setItem(\"savedRecipes\", JSON.stringify(updatedSavedRecipes)); // Update localStorage\r\n//   };\r\n\r\n//   // Filter Recipes\r\n//   const filteredRecipes = recipes.filter(\r\n//     (recipe) =>\r\n//       recipe.name.toLowerCase().includes(search.toLowerCase()) ||\r\n//       recipe.ingredients.some((ingredient) =>\r\n//         ingredient.toLowerCase().includes(search.toLowerCase())\r\n//       )\r\n//   );\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <button className=\"add-recipe-btn\" onClick={() => setShowForm(!showForm)}>\r\n//         <FaPlus /> {showForm ? \"Close\" : \"Add Recipe\"}\r\n//       </button>\r\n\r\n//       <input\r\n//         type=\"text\"\r\n//         className=\"form-control my-3\"\r\n//         placeholder=\"Search recipes by name or ingredient...\"\r\n//         value={search}\r\n//         onChange={(e) => setSearch(e.target.value)}\r\n//       />\r\n\r\n//       {showForm && (\r\n//         <div className=\"card p-3 mb-4\">\r\n//           <h4>{editRecipeId ? \"Edit Recipe\" : \"Add a New Recipe\"}</h4>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control mb-2\"\r\n//             placeholder=\"Dish Name\"\r\n//             value={newRecipe.name}\r\n//             onChange={(e) => setNewRecipe({ ...newRecipe, name: e.target.value })}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control mb-2\"\r\n//             placeholder=\"Ingredients (comma separated)\"\r\n//             value={newRecipe.ingredients}\r\n//             onChange={(e) => setNewRecipe({ ...newRecipe, ingredients: e.target.value })}\r\n//           />\r\n//           <textarea\r\n//             className=\"form-control mb-2\"\r\n//             placeholder=\"Method\"\r\n//             value={newRecipe.method}\r\n//             onChange={(e) => setNewRecipe({ ...newRecipe, method: e.target.value })}\r\n//           />\r\n//           <input type=\"file\" className=\"form-control mb-2\" onChange={handleImageUpload} accept=\"image/*\" />\r\n//           <button className=\"btn btn-success\" onClick={handleSaveRecipe}>\r\n//             {editRecipeId ? \"Update\" : \"Add\"} Recipe\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n\r\n//       <div className=\"row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\">\r\n//         {filteredRecipes.length > 0 ? (\r\n//           filteredRecipes.map((recipe) => (\r\n//             <div className=\"col\" key={recipe._id}>\r\n//               <div className=\"card h-100 shadow-sm\">\r\n//               <img src={`http://localhost:3001/api${recipe.image}`} className=\"card-img-top\" alt={recipe.name} />\r\n//                 <div className=\"card-body\">\r\n//                   <h5 className=\"card-title d-flex justify-content-between align-items-center\">\r\n//                     {recipe.name}\r\n//                     <span onClick={() => toggleSaveRecipe(recipe._id)} style={{ cursor: \"pointer\", color: \"red\", fontSize: \"1.5rem\" }}>\r\n//                       {savedRecipes.includes(recipe._id) ? <FaHeart /> : <FaRegHeart />}\r\n//                     </span>\r\n//                   </h5>\r\n//                   <p><strong>Ingredients:</strong> {recipe.ingredients.join(\", \")}</p>\r\n//                   <p><strong>Method:</strong> {recipe.method}</p>\r\n//                   <button className=\"btn btn-warning btn-sm me-2\" onClick={() => handleEditRecipe(recipe)}>\r\n//                     <FaEdit />\r\n//                   </button>\r\n//                   <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteRecipe(recipe._id)}>\r\n//                     <FaTrash />\r\n//                   </button>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           ))\r\n//         ) : (\r\n//           <p className=\"text-center\">No matching recipes found.</p>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Home;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { FaHeart, FaRegHeart, FaPlus, FaEdit, FaTrash } from \"react-icons/fa\";\r\nimport \"../pages/style/Home.css\";\r\n\r\nconst Home = () => {\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [savedRecipes, setSavedRecipes] = useState(JSON.parse(localStorage.getItem(\"savedRecipes\")) || []);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [editRecipeId, setEditRecipeId] = useState(null);\r\n  const [newRecipe, setNewRecipe] = useState({ name: \"\", ingredients: \"\", method: \"\", image: null });\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3001/api/recipes\")\r\n      .then((res) => res.json())\r\n      .then((data) => setRecipes(data))\r\n      .catch((error) => console.error(\"Error fetching recipes:\", error));\r\n  }, []);\r\n\r\n  const handleImageUpload = (e) => {\r\n    setNewRecipe((prev) => ({ ...prev, image: e.target.files[0] }));\r\n  };\r\n\r\n  const handleSaveRecipe = async () => {\r\n    if (!newRecipe.name || !newRecipe.ingredients || !newRecipe.method || !newRecipe.image) {\r\n      alert(\"Please fill out all fields!\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"name\", newRecipe.name);\r\n    formData.append(\"ingredients\", JSON.stringify(newRecipe.ingredients.split(\",\")));\r\n    formData.append(\"method\", newRecipe.method);\r\n    formData.append(\"image\", newRecipe.image);\r\n\r\n    try {\r\n      let response;\r\n      if (editRecipeId) {\r\n        response = await fetch(`http://localhost:3001/api/recipes/${editRecipeId}`, {\r\n          method: \"PUT\",\r\n          body: formData,\r\n        });\r\n      } else {\r\n        response = await fetch(\"http://localhost:3001/api/recipes\", {\r\n          method: \"POST\",\r\n          body: formData,\r\n        });\r\n      }\r\n\r\n      if (!response.ok) throw new Error(\"Failed to save recipe\");\r\n\r\n      const data = await response.json();\r\n      setRecipes(editRecipeId ? recipes.map((r) => (r._id === editRecipeId ? data : r)) : [...recipes, data]);\r\n      setShowForm(false);\r\n      setEditRecipeId(null);\r\n      setNewRecipe({ name: \"\", ingredients: \"\", method: \"\", image: null });\r\n    } catch (error) {\r\n      console.error(\"Error saving recipe:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteRecipe = async (id) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this recipe?\")) return;\r\n\r\n    try {\r\n      await fetch(`http://localhost:3001/api/recipes/${id}`, { method: \"DELETE\" });\r\n      setRecipes((prev) => prev.filter((recipe) => recipe._id !== id));\r\n    } catch (error) {\r\n      console.error(\"Error deleting recipe:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <button className=\"add-recipe-btn\" onClick={() => setShowForm(!showForm)}>\r\n        <FaPlus /> {showForm ? \"Close\" : \"Add Recipe\"}\r\n      </button>\r\n\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control my-3\"\r\n        placeholder=\"Search recipes by name or ingredient...\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n      />\r\n\r\n      {showForm && (\r\n        <div className=\"card p-3 mb-4\">\r\n          <h4>{editRecipeId ? \"Edit Recipe\" : \"Add a New Recipe\"}</h4>\r\n          <input type=\"text\" className=\"form-control mb-2\" placeholder=\"Dish Name\" value={newRecipe.name} onChange={(e) => setNewRecipe({ ...newRecipe, name: e.target.value })} />\r\n          <input type=\"text\" className=\"form-control mb-2\" placeholder=\"Ingredients (comma separated)\" value={newRecipe.ingredients} onChange={(e) => setNewRecipe({ ...newRecipe, ingredients: e.target.value })} />\r\n          <textarea className=\"form-control mb-2\" placeholder=\"Method\" value={newRecipe.method} onChange={(e) => setNewRecipe({ ...newRecipe, method: e.target.value })} />\r\n          <input type=\"file\" className=\"form-control mb-2\" onChange={handleImageUpload} accept=\"image/*\" />\r\n          <button className=\"btn btn-success\" onClick={handleSaveRecipe}>{editRecipeId ? \"Update\" : \"Add\"} Recipe</button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"row row-cols-1 row-cols-md-3 g-4\">\r\n        {recipes.map((recipe) => (\r\n          <div key={recipe._id} className=\"col\">\r\n            <div className=\"card\">\r\n              <img src={`http://localhost:3001${recipe.image}`} alt={recipe.name} />\r\n              <h5>{recipe.name}</h5>\r\n              <button onClick={() => handleDeleteRecipe(recipe._id)}><FaTrash /></button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAcA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,EAAEC,UAAU,EAAEC,MAAM,EAAEC,MAAM,EAAEC,OAAO,QAAQ,gBAAgB;AAC7E,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}