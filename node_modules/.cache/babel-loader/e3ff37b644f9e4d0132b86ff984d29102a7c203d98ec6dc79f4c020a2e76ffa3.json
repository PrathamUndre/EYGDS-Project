{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\undre\\\\OneDrive\\\\Desktop\\\\EYGDS\\\\frontend\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { FaHeart, FaRegHeart, FaPlus, FaTrash, FaEdit } from \"react-icons/fa\";\n// import \"../pages/style/Home.css\";\n\n// const Home = () => {\n//   const [recipes, setRecipes] = useState([]);\n//   const [search, setSearch] = useState(\"\");\n//   const [savedRecipes, setSavedRecipes] = useState([]);\n//   const [showForm, setShowForm] = useState(false);\n//   const [editRecipeId, setEditRecipeId] = useState(null);\n//   const [newRecipe, setNewRecipe] = useState({\n//     name: \"\",\n//     ingredients: \"\",\n//     method: \"\",\n//     image: null,\n//   });\n\n//   // Fetch Recipes from Backend\n//   useEffect(() => {\n//     fetch(\"http://localhost:5002/api/recipes\")\n//       .then((res) => res.json())\n//       .then((data) => setRecipes(data))\n//       .catch((error) => console.error(\"Error fetching recipes:\", error));\n\n//     // Load saved recipes from localStorage\n//     const storedRecipes = JSON.parse(localStorage.getItem(\"savedRecipes\")) || [];\n//     setSavedRecipes(storedRecipes);\n//   }, []);\n\n//   // Handle Image Upload\n//   const handleImageUpload = (e) => {\n//     setNewRecipe((prev) => ({ ...prev, image: e.target.files[0] }));\n//   };\n\n//   // Save or Update Recipe\n//   const handleSaveRecipe = async () => {\n//     if (!newRecipe.name || !newRecipe.ingredients || !newRecipe.method || !newRecipe.image) {\n//       alert(\"Please fill out all fields and upload an image before saving!\");\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"name\", newRecipe.name);\n//     formData.append(\"ingredients\", newRecipe.ingredients.split(\",\")); // Convert to array\n//     formData.append(\"method\", newRecipe.method);\n//     formData.append(\"image\", newRecipe.image);\n\n//     try {\n//       let response;\n//       if (editRecipeId) {\n//         // UPDATE Recipe (PUT request)\n//         response = await fetch(`http://localhost:5002/api/recipes/${editRecipeId}`, {\n//           method: \"PUT\",\n//           body: formData,\n//         });\n//       } else {\n//         // CREATE Recipe (POST request)\n//         response = await fetch(\"http://localhost:5002/api/recipes\", {\n//           method: \"POST\",\n//           body: formData,\n//         });\n//       }\n\n//       if (!response.ok) throw new Error(\"Failed to save recipe\");\n\n//       const data = await response.json();\n\n//       if (editRecipeId) {\n//         setRecipes(recipes.map((r) => (r._id === editRecipeId ? data : r))); // Update state\n//       } else {\n//         setRecipes([...recipes, data]); // Add new recipe to state\n//       }\n\n//       setShowForm(false);\n//       setEditRecipeId(null);\n//       setNewRecipe({ name: \"\", ingredients: \"\", method: \"\", image: null });\n\n//     } catch (error) {\n//       console.error(\"Error saving recipe:\", error);\n//     }\n//   };\n\n//   // Delete Recipe & Remove from Saved\n//   const handleDeleteRecipe = async (id) => {\n//     if (!window.confirm(\"Are you sure you want to delete this recipe?\")) return;\n\n//     try {\n//       await fetch(`http://localhost:5002/api/recipes/${id}`, { method: \"DELETE\" });\n\n//       setRecipes((prevRecipes) => prevRecipes.filter((recipe) => recipe._id !== id));\n\n//       // Remove from savedRecipes as well\n//       const updatedSavedRecipes = savedRecipes.filter((recipeId) => recipeId !== id);\n//       setSavedRecipes(updatedSavedRecipes);\n//       localStorage.setItem(\"savedRecipes\", JSON.stringify(updatedSavedRecipes));\n\n//     } catch (error) {\n//       console.error(\"Error deleting recipe:\", error);\n//     }\n//   };\n\n//   // Edit Recipe (Pre-fill form)\n//   const handleEditRecipe = (recipe) => {\n//     setEditRecipeId(recipe._id);\n//     setNewRecipe({\n//       name: recipe.name,\n//       ingredients: recipe.ingredients.join(\", \"), // Convert array to string\n//       method: recipe.method,\n//       image: null, // Reset image field\n//     });\n//     setShowForm(true);\n//   };\n\n//   // Toggle Save Recipe (Favoriting)\n//   const toggleSaveRecipe = (id) => {\n//     let updatedSavedRecipes;\n//     if (savedRecipes.includes(id)) {\n//       updatedSavedRecipes = savedRecipes.filter((recipeId) => recipeId !== id);\n//     } else {\n//       updatedSavedRecipes = [...savedRecipes, id];\n//     }\n//     setSavedRecipes(updatedSavedRecipes);\n//     localStorage.setItem(\"savedRecipes\", JSON.stringify(updatedSavedRecipes)); // Update localStorage\n//   };\n\n//   // Filter Recipes\n//   const filteredRecipes = recipes.filter(\n//     (recipe) =>\n//       recipe.name.toLowerCase().includes(search.toLowerCase()) ||\n//       recipe.ingredients.some((ingredient) =>\n//         ingredient.toLowerCase().includes(search.toLowerCase())\n//       )\n//   );\n\n//   return (\n//     <div className=\"container\">\n//       <button className=\"add-recipe-btn\" onClick={() => setShowForm(!showForm)}>\n//         <FaPlus /> {showForm ? \"Close\" : \"Add Recipe\"}\n//       </button>\n\n//       <input\n//         type=\"text\"\n//         className=\"form-control my-3\"\n//         placeholder=\"Search recipes by name or ingredient...\"\n//         value={search}\n//         onChange={(e) => setSearch(e.target.value)}\n//       />\n\n//       {showForm && (\n//         <div className=\"card p-3 mb-4\">\n//           <h4>{editRecipeId ? \"Edit Recipe\" : \"Add a New Recipe\"}</h4>\n//           <input\n//             type=\"text\"\n//             className=\"form-control mb-2\"\n//             placeholder=\"Dish Name\"\n//             value={newRecipe.name}\n//             onChange={(e) => setNewRecipe({ ...newRecipe, name: e.target.value })}\n//           />\n//           <input\n//             type=\"text\"\n//             className=\"form-control mb-2\"\n//             placeholder=\"Ingredients (comma separated)\"\n//             value={newRecipe.ingredients}\n//             onChange={(e) => setNewRecipe({ ...newRecipe, ingredients: e.target.value })}\n//           />\n//           <textarea\n//             className=\"form-control mb-2\"\n//             placeholder=\"Method\"\n//             value={newRecipe.method}\n//             onChange={(e) => setNewRecipe({ ...newRecipe, method: e.target.value })}\n//           />\n//           <input type=\"file\" className=\"form-control mb-2\" onChange={handleImageUpload} accept=\"image/*\" />\n//           <button className=\"btn btn-success\" onClick={handleSaveRecipe}>\n//             {editRecipeId ? \"Update\" : \"Add\"} Recipe\n//           </button>\n//         </div>\n//       )}\n\n//       <div className=\"row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\">\n//         {filteredRecipes.length > 0 ? (\n//           filteredRecipes.map((recipe) => (\n//             <div className=\"col\" key={recipe._id}>\n//               <div className=\"card h-100 shadow-sm\">\n//               <img src={`http://localhost:5002/api${recipe.image}`} className=\"card-img-top\" alt={recipe.name} />\n//                 <div className=\"card-body\">\n//                   <h5 className=\"card-title d-flex justify-content-between align-items-center\">\n//                     {recipe.name}\n//                     <span onClick={() => toggleSaveRecipe(recipe._id)} style={{ cursor: \"pointer\", color: \"red\", fontSize: \"1.5rem\" }}>\n//                       {savedRecipes.includes(recipe._id) ? <FaHeart /> : <FaRegHeart />}\n//                     </span>\n//                   </h5>\n//                   <p><strong>Ingredients:</strong> {recipe.ingredients.join(\", \")}</p>\n//                   <p><strong>Method:</strong> {recipe.method}</p>\n//                   <button className=\"btn btn-warning btn-sm me-2\" onClick={() => handleEditRecipe(recipe)}>\n//                     <FaEdit />\n//                   </button>\n//                   <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteRecipe(recipe._id)}>\n//                     <FaTrash />\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p className=\"text-center\">No matching recipes found.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Home;\nimport React, { useState, useEffect } from \"react\";\nimport { FaHeart, FaRegHeart, FaPlus, FaTrash, FaEdit } from \"react-icons/fa\";\nimport \"../pages/style/Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [savedRecipes, setSavedRecipes] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [editRecipeId, setEditRecipeId] = useState(null);\n  const [newRecipe, setNewRecipe] = useState({\n    name: \"\",\n    ingredients: \"\",\n    method: \"\",\n    image: null\n  });\n\n  // Fetch Recipes from Backend\n  useEffect(() => {\n    const fetchRecipes = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5002/api/recipes\");\n        if (!response.ok) throw new Error(\"Failed to fetch recipes\");\n        const data = await response.json();\n        setRecipes(data);\n      } catch (error) {\n        console.error(\"Error fetching recipes:\", error);\n      }\n    };\n    fetchRecipes();\n\n    // Load saved recipes from localStorage\n    const storedRecipes = JSON.parse(localStorage.getItem(\"savedRecipes\")) || [];\n    setSavedRecipes(storedRecipes);\n  }, []);\n\n  // Handle Image Upload\n  const handleImageUpload = e => {\n    setNewRecipe(prev => ({\n      ...prev,\n      image: e.target.files[0]\n    }));\n  };\n\n  // Save or Update Recipe\n  const handleSaveRecipe = async () => {\n    if (!newRecipe.name || !newRecipe.ingredients || !newRecipe.method || !newRecipe.image) {\n      alert(\"Please fill out all fields and upload an image before saving!\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"name\", newRecipe.name);\n    formData.append(\"ingredients\", JSON.stringify(newRecipe.ingredients.split(\",\"))); // Convert to array\n    formData.append(\"method\", newRecipe.method);\n    formData.append(\"image\", newRecipe.image);\n    const token = localStorage.getItem('token'); // Retrieve the token from localStorage\n\n    if (!token) {\n      console.error('No token found, authorization denied');\n      // Optionally, redirect to login page or prompt user to log in\n      return;\n    }\n    try {\n      const response = await fetch(editRecipeId ? `http://localhost:5002/api/recipes/${editRecipeId}` : 'http://localhost:5002/api/recipes', {\n        method: editRecipeId ? 'PUT' : 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}` // Include the token in the Authorization header\n        },\n        body: formData\n      });\n      if (response.status === 401) {\n        console.error('Unauthorized: Invalid or expired token');\n        // Optionally, redirect to login page or prompt user to re-authenticate\n        return;\n      }\n      if (!response.ok) {\n        throw new Error('Failed to save recipe');\n      }\n      const data = await response.json();\n      setRecipes(prevRecipes => editRecipeId ? prevRecipes.map(r => r._id === editRecipeId ? data : r) : [...prevRecipes, data]);\n      setShowForm(false);\n      setEditRecipeId(null);\n      setNewRecipe({\n        name: \"\",\n        ingredients: \"\",\n        method: \"\",\n        image: null\n      });\n    } catch (error) {\n      console.error('Error saving recipe:', error);\n    }\n  };\n\n  // Delete Recipe\n  const handleDeleteRecipe = async id => {\n    if (!window.confirm(\"Are you sure you want to delete this recipe?\")) return;\n    try {\n      const response = await fetch(`http://localhost:5002/api/recipes/${id}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) throw new Error(\"Failed to delete recipe\");\n      setRecipes(prevRecipes => prevRecipes.filter(recipe => recipe._id !== id));\n\n      // Remove from savedRecipes as well\n      const updatedSavedRecipes = savedRecipes.filter(recipeId => recipeId !== id);\n      setSavedRecipes(updatedSavedRecipes);\n      localStorage.setItem(\"savedRecipes\", JSON.stringify(updatedSavedRecipes));\n    } catch (error) {\n      console.error(\"Error deleting recipe:\", error);\n    }\n  };\n\n  // Edit Recipe (Pre-fill form)\n  const handleEditRecipe = recipe => {\n    setEditRecipeId(recipe._id);\n    setNewRecipe({\n      name: recipe.name,\n      ingredients: recipe.ingredients.join(\", \"),\n      // Convert array to string\n      method: recipe.method,\n      image: null // Reset image field\n    });\n    setShowForm(true);\n  };\n\n  // Toggle Save Recipe (Favoriting)\n  const toggleSaveRecipe = id => {\n    const updatedSavedRecipes = savedRecipes.includes(id) ? savedRecipes.filter(recipeId => recipeId !== id) : [...savedRecipes, id];\n    setSavedRecipes(updatedSavedRecipes);\n    localStorage.setItem(\"savedRecipes\", JSON.stringify(updatedSavedRecipes));\n  };\n\n  // Filter Recipes\n  const filteredRecipes = recipes.filter(recipe => recipe.name.toLowerCase().includes(search.toLowerCase()) || recipe.ingredients.some(ingredient => ingredient.toLowerCase().includes(search.toLowerCase())));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-recipe-btn\",\n      onClick: () => setShowForm(!showForm),\n      children: [/*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), \" \", showForm ? \"Close\" : \"Add Recipe\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"form-control my-3\",\n      placeholder: \"Search recipes by name or ingredient...\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card p-3 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: editRecipeId ? \"Edit Recipe\" : \"Add a New Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: \"Dish Name\",\n        value: newRecipe.name,\n        onChange: e => setNewRecipe({\n          ...newRecipe,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: \"Ingredients (comma separated)\",\n        value: newRecipe.ingredients,\n        onChange: e => setNewRecipe({\n          ...newRecipe,\n          ingredients: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control mb-2\",\n        placeholder: \"Method\",\n        value: newRecipe.method,\n        onChange: e => setNewRecipe({\n          ...newRecipe,\n          method: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control mb-2\",\n        onChange: handleImageUpload,\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: handleSaveRecipe,\n        children: [editRecipeId ? \"Update\" : \"Add\", \" Recipe\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\",\n      children: filteredRecipes.length > 0 ? filteredRecipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card h-100 shadow-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:5002${recipe.image}`,\n            className: \"card-img-top\",\n            alt: recipe.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title d-flex justify-content-between align-items-center\",\n              children: [recipe.name, /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => toggleSaveRecipe(recipe._id),\n                style: {\n                  cursor: \"pointer\",\n                  color: \"red\",\n                  fontSize: \"1.5rem\"\n                },\n                children: savedRecipes.includes(recipe._id) ? /*#__PURE__*/_jsxDEV(FaHeart, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 60\n                }, this) : /*#__PURE__*/_jsxDEV(FaRegHeart, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 74\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Ingredients:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 22\n              }, this), \" \", recipe.ingredients.join(\", \")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Method:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 22\n              }, this), \" \", recipe.method]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-warning btn-sm me-2\",\n              onClick: () => handleEditRecipe(recipe),\n              children: /*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger btn-sm\",\n              onClick: () => handleDeleteRecipe(recipe._id),\n              children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 15\n        }, this)\n      }, recipe._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center\",\n        children: \"No matching recipes found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 369,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"JeI6yYUMpieY2bCULqDzoDrsXsE=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","FaHeart","FaRegHeart","FaPlus","FaTrash","FaEdit","jsxDEV","_jsxDEV","Home","_s","recipes","setRecipes","search","setSearch","savedRecipes","setSavedRecipes","showForm","setShowForm","editRecipeId","setEditRecipeId","newRecipe","setNewRecipe","name","ingredients","method","image","fetchRecipes","response","fetch","ok","Error","data","json","error","console","storedRecipes","JSON","parse","localStorage","getItem","handleImageUpload","e","prev","target","files","handleSaveRecipe","alert","formData","FormData","append","stringify","split","token","headers","body","status","prevRecipes","map","r","_id","handleDeleteRecipe","id","window","confirm","filter","recipe","updatedSavedRecipes","recipeId","setItem","handleEditRecipe","join","toggleSaveRecipe","includes","filteredRecipes","toLowerCase","some","ingredient","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","accept","length","src","alt","style","cursor","color","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/undre/OneDrive/Desktop/EYGDS/frontend/src/pages/Home.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { FaHeart, FaRegHeart, FaPlus, FaTrash, FaEdit } from \"react-icons/fa\";\r\n// import \"../pages/style/Home.css\";\r\n\r\n// const Home = () => {\r\n//   const [recipes, setRecipes] = useState([]);\r\n//   const [search, setSearch] = useState(\"\");\r\n//   const [savedRecipes, setSavedRecipes] = useState([]);\r\n//   const [showForm, setShowForm] = useState(false);\r\n//   const [editRecipeId, setEditRecipeId] = useState(null);\r\n//   const [newRecipe, setNewRecipe] = useState({\r\n//     name: \"\",\r\n//     ingredients: \"\",\r\n//     method: \"\",\r\n//     image: null,\r\n//   });\r\n\r\n//   // Fetch Recipes from Backend\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:5002/api/recipes\")\r\n//       .then((res) => res.json())\r\n//       .then((data) => setRecipes(data))\r\n//       .catch((error) => console.error(\"Error fetching recipes:\", error));\r\n\r\n//     // Load saved recipes from localStorage\r\n//     const storedRecipes = JSON.parse(localStorage.getItem(\"savedRecipes\")) || [];\r\n//     setSavedRecipes(storedRecipes);\r\n//   }, []);\r\n\r\n//   // Handle Image Upload\r\n//   const handleImageUpload = (e) => {\r\n//     setNewRecipe((prev) => ({ ...prev, image: e.target.files[0] }));\r\n//   };\r\n\r\n//   // Save or Update Recipe\r\n//   const handleSaveRecipe = async () => {\r\n//     if (!newRecipe.name || !newRecipe.ingredients || !newRecipe.method || !newRecipe.image) {\r\n//       alert(\"Please fill out all fields and upload an image before saving!\");\r\n//       return;\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"name\", newRecipe.name);\r\n//     formData.append(\"ingredients\", newRecipe.ingredients.split(\",\")); // Convert to array\r\n//     formData.append(\"method\", newRecipe.method);\r\n//     formData.append(\"image\", newRecipe.image);\r\n\r\n//     try {\r\n//       let response;\r\n//       if (editRecipeId) {\r\n//         // UPDATE Recipe (PUT request)\r\n//         response = await fetch(`http://localhost:5002/api/recipes/${editRecipeId}`, {\r\n//           method: \"PUT\",\r\n//           body: formData,\r\n//         });\r\n//       } else {\r\n//         // CREATE Recipe (POST request)\r\n//         response = await fetch(\"http://localhost:5002/api/recipes\", {\r\n//           method: \"POST\",\r\n//           body: formData,\r\n//         });\r\n//       }\r\n\r\n//       if (!response.ok) throw new Error(\"Failed to save recipe\");\r\n\r\n//       const data = await response.json();\r\n\r\n//       if (editRecipeId) {\r\n//         setRecipes(recipes.map((r) => (r._id === editRecipeId ? data : r))); // Update state\r\n//       } else {\r\n//         setRecipes([...recipes, data]); // Add new recipe to state\r\n//       }\r\n\r\n//       setShowForm(false);\r\n//       setEditRecipeId(null);\r\n//       setNewRecipe({ name: \"\", ingredients: \"\", method: \"\", image: null });\r\n\r\n//     } catch (error) {\r\n//       console.error(\"Error saving recipe:\", error);\r\n//     }\r\n//   };\r\n\r\n//   // Delete Recipe & Remove from Saved\r\n//   const handleDeleteRecipe = async (id) => {\r\n//     if (!window.confirm(\"Are you sure you want to delete this recipe?\")) return;\r\n\r\n//     try {\r\n//       await fetch(`http://localhost:5002/api/recipes/${id}`, { method: \"DELETE\" });\r\n\r\n//       setRecipes((prevRecipes) => prevRecipes.filter((recipe) => recipe._id !== id));\r\n\r\n//       // Remove from savedRecipes as well\r\n//       const updatedSavedRecipes = savedRecipes.filter((recipeId) => recipeId !== id);\r\n//       setSavedRecipes(updatedSavedRecipes);\r\n//       localStorage.setItem(\"savedRecipes\", JSON.stringify(updatedSavedRecipes));\r\n\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting recipe:\", error);\r\n//     }\r\n//   };\r\n\r\n//   // Edit Recipe (Pre-fill form)\r\n//   const handleEditRecipe = (recipe) => {\r\n//     setEditRecipeId(recipe._id);\r\n//     setNewRecipe({\r\n//       name: recipe.name,\r\n//       ingredients: recipe.ingredients.join(\", \"), // Convert array to string\r\n//       method: recipe.method,\r\n//       image: null, // Reset image field\r\n//     });\r\n//     setShowForm(true);\r\n//   };\r\n\r\n//   // Toggle Save Recipe (Favoriting)\r\n//   const toggleSaveRecipe = (id) => {\r\n//     let updatedSavedRecipes;\r\n//     if (savedRecipes.includes(id)) {\r\n//       updatedSavedRecipes = savedRecipes.filter((recipeId) => recipeId !== id);\r\n//     } else {\r\n//       updatedSavedRecipes = [...savedRecipes, id];\r\n//     }\r\n//     setSavedRecipes(updatedSavedRecipes);\r\n//     localStorage.setItem(\"savedRecipes\", JSON.stringify(updatedSavedRecipes)); // Update localStorage\r\n//   };\r\n\r\n//   // Filter Recipes\r\n//   const filteredRecipes = recipes.filter(\r\n//     (recipe) =>\r\n//       recipe.name.toLowerCase().includes(search.toLowerCase()) ||\r\n//       recipe.ingredients.some((ingredient) =>\r\n//         ingredient.toLowerCase().includes(search.toLowerCase())\r\n//       )\r\n//   );\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <button className=\"add-recipe-btn\" onClick={() => setShowForm(!showForm)}>\r\n//         <FaPlus /> {showForm ? \"Close\" : \"Add Recipe\"}\r\n//       </button>\r\n\r\n//       <input\r\n//         type=\"text\"\r\n//         className=\"form-control my-3\"\r\n//         placeholder=\"Search recipes by name or ingredient...\"\r\n//         value={search}\r\n//         onChange={(e) => setSearch(e.target.value)}\r\n//       />\r\n\r\n//       {showForm && (\r\n//         <div className=\"card p-3 mb-4\">\r\n//           <h4>{editRecipeId ? \"Edit Recipe\" : \"Add a New Recipe\"}</h4>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control mb-2\"\r\n//             placeholder=\"Dish Name\"\r\n//             value={newRecipe.name}\r\n//             onChange={(e) => setNewRecipe({ ...newRecipe, name: e.target.value })}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control mb-2\"\r\n//             placeholder=\"Ingredients (comma separated)\"\r\n//             value={newRecipe.ingredients}\r\n//             onChange={(e) => setNewRecipe({ ...newRecipe, ingredients: e.target.value })}\r\n//           />\r\n//           <textarea\r\n//             className=\"form-control mb-2\"\r\n//             placeholder=\"Method\"\r\n//             value={newRecipe.method}\r\n//             onChange={(e) => setNewRecipe({ ...newRecipe, method: e.target.value })}\r\n//           />\r\n//           <input type=\"file\" className=\"form-control mb-2\" onChange={handleImageUpload} accept=\"image/*\" />\r\n//           <button className=\"btn btn-success\" onClick={handleSaveRecipe}>\r\n//             {editRecipeId ? \"Update\" : \"Add\"} Recipe\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n\r\n//       <div className=\"row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\">\r\n//         {filteredRecipes.length > 0 ? (\r\n//           filteredRecipes.map((recipe) => (\r\n//             <div className=\"col\" key={recipe._id}>\r\n//               <div className=\"card h-100 shadow-sm\">\r\n//               <img src={`http://localhost:5002/api${recipe.image}`} className=\"card-img-top\" alt={recipe.name} />\r\n//                 <div className=\"card-body\">\r\n//                   <h5 className=\"card-title d-flex justify-content-between align-items-center\">\r\n//                     {recipe.name}\r\n//                     <span onClick={() => toggleSaveRecipe(recipe._id)} style={{ cursor: \"pointer\", color: \"red\", fontSize: \"1.5rem\" }}>\r\n//                       {savedRecipes.includes(recipe._id) ? <FaHeart /> : <FaRegHeart />}\r\n//                     </span>\r\n//                   </h5>\r\n//                   <p><strong>Ingredients:</strong> {recipe.ingredients.join(\", \")}</p>\r\n//                   <p><strong>Method:</strong> {recipe.method}</p>\r\n//                   <button className=\"btn btn-warning btn-sm me-2\" onClick={() => handleEditRecipe(recipe)}>\r\n//                     <FaEdit />\r\n//                   </button>\r\n//                   <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteRecipe(recipe._id)}>\r\n//                     <FaTrash />\r\n//                   </button>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           ))\r\n//         ) : (\r\n//           <p className=\"text-center\">No matching recipes found.</p>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Home;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { FaHeart, FaRegHeart, FaPlus, FaTrash, FaEdit } from \"react-icons/fa\";\r\nimport \"../pages/style/Home.css\";\r\n\r\nconst Home = () => {\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [savedRecipes, setSavedRecipes] = useState([]);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [editRecipeId, setEditRecipeId] = useState(null);\r\n  const [newRecipe, setNewRecipe] = useState({\r\n    name: \"\",\r\n    ingredients: \"\",\r\n    method: \"\",\r\n    image: null,\r\n  });\r\n\r\n  // Fetch Recipes from Backend\r\n  useEffect(() => {\r\n    const fetchRecipes = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5002/api/recipes\");\r\n        if (!response.ok) throw new Error(\"Failed to fetch recipes\");\r\n        const data = await response.json();\r\n        setRecipes(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching recipes:\", error);\r\n      }\r\n    };\r\n    fetchRecipes();\r\n\r\n    // Load saved recipes from localStorage\r\n    const storedRecipes = JSON.parse(localStorage.getItem(\"savedRecipes\")) || [];\r\n    setSavedRecipes(storedRecipes);\r\n  }, []);\r\n\r\n  // Handle Image Upload\r\n  const handleImageUpload = (e) => {\r\n    setNewRecipe((prev) => ({ ...prev, image: e.target.files[0] }));\r\n  };\r\n\r\n  // Save or Update Recipe\r\n  const handleSaveRecipe = async () => {\r\n    if (!newRecipe.name || !newRecipe.ingredients || !newRecipe.method || !newRecipe.image) {\r\n      alert(\"Please fill out all fields and upload an image before saving!\");\r\n      return;\r\n    }\r\n  \r\n    const formData = new FormData();\r\n    formData.append(\"name\", newRecipe.name);\r\n    formData.append(\"ingredients\", JSON.stringify(newRecipe.ingredients.split(\",\"))); // Convert to array\r\n    formData.append(\"method\", newRecipe.method);\r\n    formData.append(\"image\", newRecipe.image);\r\n  \r\n    const token = localStorage.getItem('token'); // Retrieve the token from localStorage\r\n  \r\n    if (!token) {\r\n      console.error('No token found, authorization denied');\r\n      // Optionally, redirect to login page or prompt user to log in\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await fetch(\r\n        editRecipeId\r\n          ? `http://localhost:5002/api/recipes/${editRecipeId}`\r\n          : 'http://localhost:5002/api/recipes',\r\n        {\r\n          method: editRecipeId ? 'PUT' : 'POST',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`, // Include the token in the Authorization header\r\n          },\r\n          body: formData,\r\n        }\r\n      );\r\n  \r\n      if (response.status === 401) {\r\n        console.error('Unauthorized: Invalid or expired token');\r\n        // Optionally, redirect to login page or prompt user to re-authenticate\r\n        return;\r\n      }\r\n  \r\n      if (!response.ok) {\r\n        throw new Error('Failed to save recipe');\r\n      }\r\n  \r\n      const data = await response.json();\r\n  \r\n      setRecipes((prevRecipes) =>\r\n        editRecipeId\r\n          ? prevRecipes.map((r) => (r._id === editRecipeId ? data : r))\r\n          : [...prevRecipes, data]\r\n      );\r\n  \r\n      setShowForm(false);\r\n      setEditRecipeId(null);\r\n      setNewRecipe({ name: \"\", ingredients: \"\", method: \"\", image: null });\r\n  \r\n    } catch (error) {\r\n      console.error('Error saving recipe:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  // Delete Recipe\r\n  const handleDeleteRecipe = async (id) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this recipe?\")) return;\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5002/api/recipes/${id}`, { method: \"DELETE\" });\r\n      if (!response.ok) throw new Error(\"Failed to delete recipe\");\r\n\r\n      setRecipes((prevRecipes) => prevRecipes.filter((recipe) => recipe._id !== id));\r\n\r\n      // Remove from savedRecipes as well\r\n      const updatedSavedRecipes = savedRecipes.filter((recipeId) => recipeId !== id);\r\n      setSavedRecipes(updatedSavedRecipes);\r\n      localStorage.setItem(\"savedRecipes\", JSON.stringify(updatedSavedRecipes));\r\n\r\n    } catch (error) {\r\n      console.error(\"Error deleting recipe:\", error);\r\n    }\r\n  };\r\n\r\n  // Edit Recipe (Pre-fill form)\r\n  const handleEditRecipe = (recipe) => {\r\n    setEditRecipeId(recipe._id);\r\n    setNewRecipe({\r\n      name: recipe.name,\r\n      ingredients: recipe.ingredients.join(\", \"), // Convert array to string\r\n      method: recipe.method,\r\n      image: null, // Reset image field\r\n    });\r\n    setShowForm(true);\r\n  };\r\n\r\n  // Toggle Save Recipe (Favoriting)\r\n  const toggleSaveRecipe = (id) => {\r\n    const updatedSavedRecipes = savedRecipes.includes(id)\r\n      ? savedRecipes.filter((recipeId) => recipeId !== id)\r\n      : [...savedRecipes, id];\r\n\r\n    setSavedRecipes(updatedSavedRecipes);\r\n    localStorage.setItem(\"savedRecipes\", JSON.stringify(updatedSavedRecipes));\r\n  };\r\n\r\n  // Filter Recipes\r\n  const filteredRecipes = recipes.filter(\r\n    (recipe) =>\r\n      recipe.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      recipe.ingredients.some((ingredient) =>\r\n        ingredient.toLowerCase().includes(search.toLowerCase())\r\n      )\r\n  );\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <button className=\"add-recipe-btn\" onClick={() => setShowForm(!showForm)}>\r\n        <FaPlus /> {showForm ? \"Close\" : \"Add Recipe\"}\r\n      </button>\r\n\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control my-3\"\r\n        placeholder=\"Search recipes by name or ingredient...\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n      />\r\n\r\n      {showForm && (\r\n        <div className=\"card p-3 mb-4\">\r\n          <h4>{editRecipeId ? \"Edit Recipe\" : \"Add a New Recipe\"}</h4>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Dish Name\"\r\n            value={newRecipe.name}\r\n            onChange={(e) => setNewRecipe({ ...newRecipe, name: e.target.value })}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Ingredients (comma separated)\"\r\n            value={newRecipe.ingredients}\r\n            onChange={(e) => setNewRecipe({ ...newRecipe, ingredients: e.target.value })}\r\n          />\r\n          <textarea\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Method\"\r\n            value={newRecipe.method}\r\n            onChange={(e) => setNewRecipe({ ...newRecipe, method: e.target.value })}\r\n          />\r\n          <input type=\"file\" className=\"form-control mb-2\" onChange={handleImageUpload} accept=\"image/*\" />\r\n          <button className=\"btn btn-success\" onClick={handleSaveRecipe}>\r\n            {editRecipeId ? \"Update\" : \"Add\"} Recipe\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\">\r\n        {filteredRecipes.length > 0 ? (\r\n          filteredRecipes.map((recipe) => (\r\n            <div className=\"col\" key={recipe._id}>\r\n              <div className=\"card h-100 shadow-sm\">\r\n                <img src={`http://localhost:5002${recipe.image}`} className=\"card-img-top\" alt={recipe.name} />\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title d-flex justify-content-between align-items-center\">\r\n                    {recipe.name}\r\n                    <span onClick={() => toggleSaveRecipe(recipe._id)} style={{ cursor: \"pointer\", color: \"red\", fontSize: \"1.5rem\" }}>\r\n                      {savedRecipes.includes(recipe._id) ? <FaHeart /> : <FaRegHeart />}\r\n                    </span>\r\n                  </h5>\r\n                  <p><strong>Ingredients:</strong> {recipe.ingredients.join(\", \")}</p>\r\n                  <p><strong>Method:</strong> {recipe.method}</p>\r\n                  <button className=\"btn btn-warning btn-sm me-2\" onClick={() => handleEditRecipe(recipe)}>\r\n                    <FaEdit />\r\n                  </button>\r\n                  <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteRecipe(recipe._id)}>\r\n                    <FaTrash />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p className=\"text-center\">No matching recipes found.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,EAAEC,UAAU,EAAEC,MAAM,EAAEC,OAAO,EAAEC,MAAM,QAAQ,gBAAgB;AAC7E,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}